{"version":3,"sources":["assets/Project1_Img.jpg","components/Navbar.jsx","components/ProjectPage.jsx","components/project-pages/Project2Page.jsx","components/ProjectCard.jsx","components/HomePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Fragment","className","to","viewBox","xmlns","d","href","ProjectPage","console","log","src","Project1Img","alt","Project2Page","ProjectCard","props","projectLink","projectName","HomePage","App","require","BrowserRouter","Route","Link","basename","id","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,0C,kJCG5B,SAASC,IACvB,OACC,kBAAC,IAAMC,SAAP,KACC,yBAAKC,UAAU,iEACd,yBAAKA,UAAU,wCACd,kBAAC,OAAD,CAAMC,GAAG,KACR,0BAAMD,UAAU,iDAAhB,gBAGF,yBAAKA,UAAU,mBACd,4BAAQA,UAAU,gHACjB,yBAAKA,UAAU,uBAAuBE,QAAQ,YAAYC,MAAM,8BAC/D,uCACA,0BAAMC,EAAE,mDAKX,yBAAKJ,UAAU,gFACd,uBACCK,KAAK,wCACLL,UAAU,kEAFX,UAMA,kBAAC,OAAD,CAAMC,GAAG,SAASD,UAAU,+DAA5B,Y,qBCvBU,SAASM,IAEvB,OADAC,QAAQC,IAAI,yBAEX,kBAAC,IAAMT,SAAP,KACC,yBAAKC,UAAU,qBACd,yBAAKS,IAAKC,IAAaC,IAAI,YAE3B,yBAAKX,UAAU,0BACd,uBAAGA,UAAU,YAAb,eACA,yBAAKA,UAAU,YAAf,wUCXU,SAASY,IACtB,OACE,kBAAC,IAAMb,SAAP,KACE,yBAAKC,UAAU,qBACb,yBAAKS,IAAKC,IAAaC,IAAI,YAE3B,yBAAKX,UAAU,0BACb,uBAAGA,UAAU,YAAb,aAGA,yBAAKA,UAAU,YAAf,WACA,yBAAKA,UAAU,WAAf,wEAGE,0BAAMA,UAAU,iBAAhB,gDAKF,yBAAKA,UAAU,WAAf,sEAKA,yBAAKA,UAAU,WAAf,8IAMA,yBAAKA,UAAU,YAAf,WAGA,yBAAKA,UAAU,WAAf,qGAMA,yBAAKA,UAAU,WAAf,qLAOA,yBAAKA,UAAU,WAAf,+MAOA,yBAAKA,UAAU,WAAf,uHAEoD,KAIpD,yBAAKA,UAAU,WAAf,8FAMA,yBAAKA,UAAU,YAAf,YAEA,yBAAKA,UAAU,WAAf,0SClEV,IAsBea,EAtBK,SAAAC,GAClB,OACE,kBAAC,IAAMf,SAAP,KACE,yBAAKC,UAAU,gEACb,kBAAC,OAAD,CAAMC,GAAIa,EAAMC,aACd,yBAAKf,UAAU,SACb,yBACEA,UAAU,SACVC,GAAIa,EAAMC,YACVN,IAAKC,IACLC,IAAI,aAGR,yBAAKX,UAAU,iCACZc,EAAME,iBCDJC,EAdE,WACf,OACE,kBAAC,IAAMlB,SAAP,KACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,oBAAf,2BAEF,yBAAKA,UAAU,iCACb,kBAAC,EAAD,CAAagB,YAAY,YAAYD,YAAY,WACjD,kBAAC,EAAD,CAAaC,YAAY,YAAYD,YAAY,cCkH1CG,MA1Bf,WACwBC,EAAQ,GAAoBC,cAAlD,IACMC,EAAQF,EAAQ,GAAoBE,MAU1C,OATaF,EAAQ,GAAoBG,KAUvC,kBAAC,aAAD,CAAQC,SAAS,KACf,yBAAKC,GAAG,OACN,kBAAC1B,EAAD,MACA,kBAACuB,EAAD,CAAOI,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAACI,EAAD,CAAOI,OAAK,EAACC,KAAK,SAASC,UAAWrB,IACtC,kBAACe,EAAD,CAAOI,OAAK,EAACC,KAAK,SAASC,UAAWf,IAEtC,kBAACS,EAAD,CAAOI,OAAK,EAACC,KAAK,SAASC,UAAW,kBAAM,4CC3GhCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.bdd87227.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Project1_Img.b2f1f031.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<nav className=\"flex items-center justify-between flex-wrap p-6 text-gray-900\">\n\t\t\t\t<div className=\"flex items-center flex-shrink-0 mr-6\">\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<span className=\"font-semibold text-2xl tracking-tight md:ml-8\">Vivian Lam</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"block lg:hidden\">\n\t\t\t\t\t<button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\n\t\t\t\t\t\t<svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<title>Menu</title>\n\t\t\t\t\t\t\t<path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"w-full block flex-grow lg:flex lg:flex-row-reverse lg:items-center lg:w-auto\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"/portfolio-2019/Resume-Vivian-Lam.pdf\"\n\t\t\t\t\t\tclassName=\"block mt-4 md:mr-8 lg:inline-block lg:mt-0 hover:text-gray-500\"\n\t\t\t\t\t>\n\t\t\t\t\t\tResume\n\t\t\t\t\t</a>\n\t\t\t\t\t<Link to=\"/about\" className=\"block mt-4 mr-4 lg:inline-block lg:mt-0 hover:text-gray-500\">\n\t\t\t\t\t\tAbout\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</React.Fragment>\n\t);\n}\n","import Grid from '@material-ui/core/Grid';\nimport NavBar from './Navbar';\nimport React from 'react';\nimport Project1Img from '../assets/Project1_Img.jpg';\n\nexport default function ProjectPage() {\n\tconsole.log('ProjectPage is called');\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"md:mx-16 md:mt-16\">\n\t\t\t\t<img src={Project1Img} alt=\"Project\" />\n\n\t\t\t\t<div className=\"flex flex-col md:mx-32\">\n\t\t\t\t\t<p className=\"text-6xl\">I'm a title</p>\n\t\t\t\t\t<div className=\"text-2xl\">\n\t\t\t\t\t\tLorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic\n\t\t\t\t\t\tor web designs. The passage is attributed to an unknown typesetter in the 15th century who is\n\t\t\t\t\t\tthought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type\n\t\t\t\t\t\tspecimen book. It usually begins with:\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n","import React from 'react';\nimport Project1Img from '../../assets/Project1_Img.jpg';\n\nexport default function Project2Page() {\n  return (\n    <React.Fragment>\n      <div className=\"md:mx-16 md:mt-16\">\n        <img src={Project1Img} alt=\"Project\" />\n\n        <div className=\"flex flex-col md:mx-32\">\n          <p className=\"text-6xl\">Dropwatch</p>\n\n          {/* bold */}\n          <div className=\"text-2xl\">Problem</div>\n          <div className=\"text-lg\">\n            1. Customers who are loyal to certain Shopify stores want to\n            know&nbsp;\n            <span className=\"font-semibold\">\n              when products on their wishlist go on sale.\n            </span>\n          </div>\n\n          <div className=\"text-lg\">\n            2. There are a lot of Shopify stores that people don't know about.\n          </div>\n\n          {/* add spacing */}\n          <div className=\"text-lg\">\n            Currently, merchants - the sellers of the stores, can send out\n            newsletters to let their email list know when sales are going on.\n          </div>\n\n          {/* add spacing */}\n          <div className=\"text-2xl\">However</div>\n\n          {/* add bullet */}\n          <div className=\"text-lg\">\n            - Merchants are busy people and don't always have the bandwidth to\n            write and send out newsletters\n          </div>\n\n          {/* add bullet */}\n          <div className=\"text-lg\">\n            - Newsletters are often lost amidst other emails, and hence, are\n            frequently unread. This causes customers to miss out on times when\n            their favourite or desired product is on sale\n          </div>\n\n          {/* add spacing */}\n          <div className=\"text-lg\">\n            Given that a lot of online stores are run by Shopify, and that users\n            generally shop at more than one store, I decided to make a mobile\n            app that allows users to visit all Shopify stores within one portal.\n          </div>\n\n          {/* add spacing */}\n          <div className=\"text-lg\">\n            It would be great if, at a single place, a user can be notified of\n            all the sales going on at their favourite stores.{' '}\n          </div>\n\n          {/* add spacing */}\n          <div className=\"text-lg\">\n            What would be even better is if a user can be notified when products\n            they want go on sale.\n          </div>\n\n          {/* bold */}\n          <div className=\"text-2xl\">Solution</div>\n\n          <div className=\"text-lg\">\n            Users of Dropwatch can browse all of their favourite stores (and\n            more) from the comfort of a single app. At product pages, users can\n            either choose to add the product to their cart, or they can add the\n            product to their drop list and get a push notification for when the\n            product's price drops.\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Project1Img from '../assets/Project1_Img.jpg';\n\nconst ProjectCard = props => {\n  return (\n    <React.Fragment>\n      <div className=\"w-full sm:w-5/12 m-10 sm:m-6 md:m-15 lg:m-12 overflow-hidden\">\n        <Link to={props.projectLink}>\n          <div className=\"image\">\n            <img\n              className=\"w-full\"\n              to={props.projectLink}\n              src={Project1Img}\n              alt=\"Project\"\n            />\n          </div>\n          <div className=\"hover:underline text-3xl mt-6\">\n            {props.projectName}\n          </div>\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport ProjectCard from '../components/ProjectCard';\n\nconst HomePage = () => {\n  return (\n    <React.Fragment>\n      <div className=\"sm:w-5/12 sm:m-6\">\n        <div className=\"text-3xl md:ml-8\">Hi! My name is Vivian.</div>\n      </div>\n      <div className=\"flex flex-wrap justify-center\">\n        <ProjectCard projectName=\"Project 1\" projectLink=\"/proj1\" />\n        <ProjectCard projectName=\"Project 2\" projectLink=\"/proj2\" />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport ProjectPage from './components/ProjectPage';\nimport Project2Page from './components/project-pages/Project2Page';\nimport Navbar from './components/Navbar';\n\nimport HomePage from './components/HomePage';\n\nfunction Meow() {\n  return (\n    <React.Fragment>\n      <h1>meow</h1>\n    </React.Fragment>\n  );\n}\n\nfunction DemoCard1() {\n  return (\n    <React.Fragment>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            image=\"/static/images/cards/contemplative-reptile.jpg\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nfunction DemoCard2() {\n  return (\n    <React.Fragment>\n      <Card>\n        <CardActionArea>\n          <CardMedia\n            image=\"/static/images/cards/contemplative-reptile.jpg\"\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over\n              6,000 species, ranging across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Link to=\"/home\">Project 1</Link>\n        </CardActions>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nfunction renderProjectCards() {\n  return (\n    <React.Fragment>\n      <Grid container spacing={24} justify=\"center\" alignItems=\"center\">\n        {Navbar()}\n        <Grid item xs={6}>\n          {DemoCard1()}\n        </Grid>\n\n        <Grid item xs={6}>\n          {DemoCard2()}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  const BrowserRouter = require('react-router-dom').BrowserRouter;\n  const Route = require('react-router-dom').Route;\n  const Link = require('react-router-dom').Link;\n\n  const styles = {\n    margins: {\n      marginLeft: '20',\n      marginRight: '20'\n    }\n  };\n\n  return (\n    <Router basename=\"/\">\n      <div id=\"app\">\n        <Navbar />\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/proj1\" component={ProjectPage} />\n        <Route exact path=\"/proj2\" component={Project2Page} />\n\n        <Route exact path=\"/about\" component={() => <div>About</div>} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}